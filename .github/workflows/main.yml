name: Python Package Publication

on:
  # pull_request:
  #   types: [closed]
  #   branches: [master]
  #   paths:
  #     - '**.cpp'
  #     - '**.hpp'
  #     - '**.py'
  #     - 'setup.py'
  #     - 'setup.cfg'
  #     - 'pyproject.toml'

  # workflow_dispatch:
  #   inputs:
  #     dry-run:
  #       description: 'Dry run (no actual upload to PyPI)'
  #       type: boolean
  #       default: true

  push:
    branches-ignore:
      - master
    paths:
      - '**.cpp'
      - '**.hpp'
      - '**.py'
      - 'setup.py'
      - 'setup.cfg'
      - 'pyproject.toml'
      # this workflow is triggered by push to master
      - '**.yml'
    # When pushing to non-master branches, run with dry-run mode

jobs:
  linux-build:
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools twine packaging>=24.2
      - name: Get version
        id: get_version
        run: |
          echo "version=$(python setup.py --version)" >> $GITHUB_OUTPUT
      - name: Python wheels manylinux stable build
        uses: RalfG/python-wheels-manylinux-build@v0.5.0
        with:
          python-versions: 'cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311 cp312-cp312'
      - name: dry run upload wheel
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*-manylinux*.whl || echo "Dry run - would have uploaded wheels"
        continue-on-error: true
    
  other-os-build:
    runs-on: ${{ matrix.os }}
    env:
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel setuptools twine packaging>=24.2
      - name: Get version
        id: get_version
        run: |
          echo "version=$(python setup.py --version)" >> $GITHUB_OUTPUT
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: build wheel
        run: |
          python setup.py bdist_wheel
      - name: dry run upload wheel
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ dist/* || echo "Dry run - would have uploaded wheels"
        continue-on-error: true
        
  release-build:
    if: false  # Temporarily disabled
    needs: [ linux-build, other-os-build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get version
        id: get_version
        run: |
          echo "version=$(python setup.py --version)" >> $GITHUB_OUTPUT
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ steps.get_version.outputs.version }}" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${GITHUB_REPOSITORY#*/} ${{ steps.get_version.outputs.version }}" \
              --generate-notes
