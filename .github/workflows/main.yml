# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      release-version:
        required: true
        

jobs:
  linux-build:
    runs-on: ubuntu-latest
    env:
      TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Linuxuild
        uses: Niraj-Kamdar/manylinux-wheel-builder@v1

  other-os-build:
    runs-on: ${{ matrix.os }}
    env:
      TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: build wheel
        run: |
          pip install wheel
          python setup.py bdist_wheel
      - name: upload wheel
        run: |
          pip install twine
          twine upload dist/*
        continue-on-error: false
        
  release-build:
    needs: [ linux-build, other-os-build ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: "package-release.zip"
        exclusions: '*.git* __pycache__/* .editorconfig build/* .eggs/*'
    - name: Upload Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "package-release.zip"
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.event.inputs.release-version }}
