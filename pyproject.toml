[build-system]
requires = [
    "setuptools>=61.0",
    "setuptools-scm>=8.0",
    "pybind11>=2.6.1",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "cmtj"
description = "CMTJ - C Magnetic Tunnel Junctions."
readme = "README.md"
license = {text = "GPL-2.0-only"}
authors = [
    {name = "Jakub", email = "mojsieju@agh.edu.pl"}
]
keywords = ["magnetics", "physics", "simulation", "spintronics"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Typing :: Stubs Only",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    "numpy>=1.25.0",
    "numba>=0.60.0",
    "sympy>=1.14.0",
    "scipy>=1.13.1",
    "tqdm>=4.63.3",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/LemurPwned/cmtj"
Documentation = "https://lemurpwned.github.io/cmtj"
Repository = "https://github.com/LemurPwned/cmtj"
Issues = "https://github.com/LemurPwned/cmtj/issues"

[project.optional-dependencies]
utils = [
    "matplotlib",
    "pandas",
    "multiprocess",
]
test = [
    "pytest",
]
dev = [
    "pytest",
    "pre-commit",
    "ruff",
    "mypy",
    "pybind11-stubgen",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
    "mkdocstrings[python]",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["cmtj*"]

[tool.setuptools.package-data]
cmtj = ["py.typed", "**/*.pyi"]

[tool.setuptools_scm]
version_scheme = "no-guess-dev"
local_scheme = "dirty-tag"
write_to = "cmtj/_version.py"

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"tests/*" = ["E711", "E712"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
